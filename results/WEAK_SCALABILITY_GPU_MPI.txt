# The first column is the size of the matrix
# The second column is the number of MPI processes / devices
# The third column is the number of OpenMP threads
# The fourth column is the time to read the matrix or generate the matrix in seconds
# The fifth column is the average time to perform the GEMV operation in seconds
# The sixth column is the average time to perform a single iteration of the CG algorithm in seconds
# The seventh column is the number of iterations of the CG algorithm
# The eighth column is the error of the CG algorithm
# The ninth column is the time to perform the entire CG algorithm in seconds

# The following output is from the weak scalability test
# The test tries to assess the performance of the CG algorithm as the number of MPI processes increases
# according to the size of the matrix

10000,1,1,1.446,0.00067769,0.000776036,358,9.99103e-10,0.285
20000,4,1,2.422,0.000728128,0.000837679,359,9.93128e-10,0.32
40000,8,1,4.511,0.00168421,0.00179293,360,9.43879e-10,0.676 # time almost doubles because of the overhead of the communication when going multinode
40000,16,1,3.117,0.00102422,0.00113505,360,9.43879e-10,0.422
70000,48,1,3.326,0.00133823,0.00144356,364,9.91413e-10,0.541
80000,64,1,1.264,0.00130812,0.00141068,1001,1.25e-06,1